import kfp
from kfp import dsl

@dsl.pipeline(name='First Pipeline', description='Applies Logistic Regression for classification problem.')
def first_pipeline():

    # Loads the yaml manifest for each component
    download = kfp.components.load_component_from_file('download_data/download_data.yaml')
    model_training = kfp.components.load_component_from_file('model_training/model_training.yaml')
    print_result = kfp.components.load_component_from_file("print_result/print_result.yaml")
    # Run download_data task
    download_task = download()

    # Run task "model_training" given
    # the output generated by "download_task".
    model_training_task = model_training(download_task.output)

    # Given the output from "model_training"
    # the component "print_result" is called to print the results.
    print_result(model_training_task.output)



if __name__ == '__main__':
    kfp.compiler.Compiler().compile(first_pipeline, 'FirstPipeline.yaml')
    #kfp.Client().create_run_from_pipeline_func(first_pipeline, arguments={})
